# anova = maximum length ~ site
siteml<-lm.rrpp(maxl ~ Site, SS.type = "I",data = data,iter = 9999,print.progress = FALSE)
anova(siteml)
# pairwise comparison = which sites differ?
site.pwml<-pairwise(siteml, groups = data$Site)
summary(site.pwml, confidence = 0.95, test.type = "dist")
# visualise model predictions for maximum length ~ site
siteDF<-data.frame(Site = c("Cooper","Means","Pov Pt"))
rownames(siteDF)<-c("Cooper","Means","Pov Pt")
sitePreds<-predict(siteml,siteDF)
plot(sitePreds, col = 1:NROW(siteDF))
#
plot(siteml, type = "regression", reg.type = "PredLine", predictor = data$Site, pch = 19, col = as.numeric(Site))
#
plot(siteml, type = "regression", reg.type = "PredLine", predictor = data$Site, pch = 19, col = as.numeric(data$Site))
#
plot(siteml, type = "regression", reg.type = "PredLine", predictor = data$Site)
#
plot(siteml, type = "regression", reg.type = "PredLine", predictor = data$maxl)
#
plot(siteml, type = "regression", reg.type = "PredLine", predictor = data$maxl, pch = 12, col = as.numeric(data$maxl))
#
plot(siteml, type = "regression", reg.type = "PredLine", predictor = data$maxl, pch = 19, col = as.numeric(data$maxl))
#
plot(siteml, type = "regression", reg.type = "PredLine", predictor = data$maxl, pch = 19, col = as.numeric(data$Site))
#
plot(siteml, type = "regression", reg.type = "PredLine", predictor = data$maxl, pch = 19, col = as.numeric(data$Site))
#
plot(siteml, type = "regression", reg.type = "PredLine", predictor = data$maxl, pch = 19, col = data$Site)
#
plot(siteml, type = "regression", reg.type = "PredLine", predictor = data$maxl, pch = 19, col = data$Site)
#
plot(siteml, type = "regression", reg.type = "PredLine", predictor = data$maxl, pch = 19)
#
plot(siteml, type = "regression", reg.type = "PredLine", predictor = data$maxl, pch = 19, col = "Site")
#
plot(siteml, type = "regression", reg.type = "PredLine", predictor = data$maxl, pch = 19, col = site)
#
plot(siteml, type = "regression", reg.type = "PredLine", predictor = data$maxl, pch = 19, col = as.numeric(site))
# install required analysis packages
#devtools::install_github("rich-iannone/DiagrammeR")
#devtools::install_github("vqv/ggbiplot")
#devtools::install_github("mlcollyer/RRPP")
#devtools::install_github("tidyverse/ggplot2")
#devtools::install_github("kassambara/ggpubr")
# load libraries
library(DiagrammeR)
library(ggbiplot)
library(RRPP)
library(ggplot2)
library(ggpubr)
library(ggfortify)
library(cluster)
# install required analysis packages
#devtools::install_github("rich-iannone/DiagrammeR")
#devtools::install_github("vqv/ggbiplot")
#devtools::install_github("mlcollyer/RRPP")
#devtools::install_github("tidyverse/ggplot2")
#devtools::install_github("kassambara/ggpubr")
# load libraries
library(DiagrammeR)
library(ggbiplot)
library(RRPP)
library(ggplot2)
library(ggpubr)
library(ggfortify)
library(cluster)
### Set working directory, load data, and define variables
# set working directory
setwd(getwd())
data<-read.csv("garymorphlm.csv",header = TRUE, as.is=TRUE)
# define variables
maxl<-data$maxl # maximum length
maxw<-data$maxw # maximum width
maxth<-data$maxth # maximum thickness
maxstl<-data$maxstl # maximum stem length
maxstw<-data$maxstw # maximum stem width
site<-data$Site # site name
### Principal Components Analysis for _site_
# assign varieties based upon reported metrics in Ford and Webb [1956]
lcheck1 <- data$maxl >= 80 & data$maxl <= 140
lcheck2 <- data$maxl >= 46 & data$maxl < 80
lcheck3 <- data$maxl >= 33 & data$maxl < 46
data$tv1 <- "UID" # = Gary points (no variety)
data$tv1 <- ifelse(lcheck1, "L", data$tv1)
data$tv1 <- ifelse(lcheck2, "M/T", data$tv1)
data$tv1 <- ifelse(lcheck3, "S", data$tv1)
tv1<-data$tv1
tv1
# subset poverty point data
pvptmx<-subset(data,Site=="Pov Pt",select=maxl:tv1)
pvptmx
#pca
df<-pvptmx[c(1:5)]
t1pca<-autoplot(prcomp(df),data = data, colour = 'tv1',
loadings = TRUE, loadings.colour = 'blue',
loadings.label = TRUE,loadings.label.size = 3,
frame = TRUE)
t1pca<-autoplot(prcomp(df),data = pvptmx, colour = 'tv1',
loadings = TRUE, loadings.colour = 'blue',
loadings.label = TRUE,loadings.label.size = 3,
frame = TRUE)
#render figure
t1pca
# install required analysis packages
#devtools::install_github("rich-iannone/DiagrammeR")
#devtools::install_github("vqv/ggbiplot")
#devtools::install_github("mlcollyer/RRPP")
#devtools::install_github("tidyverse/ggplot2")
#devtools::install_github("kassambara/ggpubr")
# load libraries
library(DiagrammeR)
library(ggbiplot)
library(RRPP)
library(ggplot2)
library(ggpubr)
library(ggfortify)
library(cluster)
### Set working directory, load data, and define variables
# set working directory
setwd(getwd())
data<-read.csv("garymorphlm.csv",header = TRUE, as.is=TRUE)
# define variables
maxl<-data$maxl # maximum length
maxw<-data$maxw # maximum width
maxth<-data$maxth # maximum thickness
maxstl<-data$maxstl # maximum stem length
maxstw<-data$maxstw # maximum stem width
site<-data$Site # site name
### Principal Components Analysis for _site_
# assign varieties based upon reported metrics in Ford and Webb [1956]
lcheck1 <- data$maxl >= 80 & data$maxl <= 140
lcheck2 <- data$maxl >= 46 & data$maxl < 80
lcheck3 <- data$maxl >= 33 & data$maxl < 46
data$tv1 <- "UID" # = Gary points (no variety)
data$tv1 <- ifelse(lcheck1, "L", data$tv1)
data$tv1 <- ifelse(lcheck2, "M/T", data$tv1)
data$tv1 <- ifelse(lcheck3, "S", data$tv1)
tv1<-data$tv1
tv1
# subset poverty point data
pvptmx<-subset(data,Site=="Pov Pt",select=maxl:tv1)
pvptmx
#pca
df<-pvptmx[c(1:5)]
t1pca<-autoplot(prcomp(df),data = pvptmx, colour = 'tv1',
loadings = TRUE, loadings.colour = 'blue',
loadings.label = TRUE,loadings.label.size = 3,
frame = TRUE)
#render figure
t1pca
#pca
df<-pvptmx[c(2:6)]
t1pca<-autoplot(prcomp(df),data = pvptmx, colour = 'tv1',
loadings = TRUE, loadings.colour = 'blue',
loadings.label = TRUE,loadings.label.size = 3,
frame = TRUE)
#render figure
t1pca
dimnames(pvptmx)
#render figure
t1pca
pp.maxl<-pvptmx$maxl
pp.tv1<-pvptmx$tv1
# anova = maximum length ~ tv1
t1ml<-lm.rrpp(pp.maxl ~ pp.tv1, SS.type = "I",data = pvptmx,iter = 9999,print.progress = FALSE)
anova(t1ml)
# visualise model predictions for maximum length ~ site
pp.tvDF<-data.frame(Site = c("Gary Large","Gary Typical","Gary Small"))
rownames(siteDF)<-c("Gary Large","Gary Typical","Gary Small")
rownames(pp.tvDF)<-c("Gary Large","Gary Typical","Gary Small")
tvPreds<-predict(t1ml,pp.tvDF)
pp.tvDF
# visualise model predictions for maximum length ~ site
pp.tvDF<-data.frame(tv = c("L","M/T","S"))
rownames(pp.tvDF)<-c("Gary Large","Gary Typical","Gary Small")
tvPreds<-predict(t1ml,pp.tvDF)
# visualise model predictions for maximum length ~ site
pp.tvDF<-data.frame(tv = c("L","M/T","S"))
rownames(pp.tvDF)<-c("L","M/T","S")
tvPreds<-predict(t1ml,pp.tvDF)
plot(tvPreds, col = 1:NROW(pp.tvDF))
t1ml
pp.tvDF
# visualise model predictions for maximum length ~ site
pp.tvDF<-data.frame(tv1 = c("L","M/T","S"))
rownames(pp.tvDF)<-c("L","M/T","S")
tvPreds<-predict(t1ml,pp.tvDF)
plot(tvPreds, col = 1:NROW(pp.tvDF))
plot(ppPreds, col = 1:NROW(pp.tvDF))
ppPreds<-predict(t1ml,pp.tvDF)
pp.maxl<-pvptmx$maxl
pp.tv1<-pvptmx$tv1
# anova = maximum length ~ tv1
t1ml<-lm.rrpp(pp.maxl ~ pp.tv1, SS.type = "I",data = pvptmx,iter = 9999,print.progress = FALSE)
anova(t1ml)
# visualise model predictions for maximum length ~ site
pp.tvDF<-data.frame(pp.tv1 = c("L","M/T","S"))
rownames(pp.tvDF)<-c("L","M/T","S")
ppPreds<-predict(t1ml,pp.tvDF)
plot(ppPreds, col = 1:NROW(pp.tvDF))
# pairwise comparison of LS means = which sites differ?
pp.ml<-pairwise(t1ml, groups = pvptmx$tv1)
# pairwise comparison of LS means = which sites differ?
pp.ml<-pairwise(t1ml, groups = pvptmx$tv1)
summary(pp.ml, confidence = 0.95, test.type = "dist")
# correlation between mean vectors (angles in degrees)
summary(pp.ml, confidence = 0.95, test.type = "VC", angle.type = "deg")
# pairwise distances between variances = standardization?
summary(pp.ml, confidence = 0.95, test.type = "var")
?par
?plot
# install required analysis packages
#devtools::install_github("rich-iannone/DiagrammeR")
#devtools::install_github("vqv/ggbiplot")
#devtools::install_github("mlcollyer/RRPP")
#devtools::install_github("tidyverse/ggplot2")
#devtools::install_github("kassambara/ggpubr")
# load libraries
library(DiagrammeR)
library(ggbiplot)
library(RRPP)
library(ggplot2)
library(ggpubr)
library(ggfortify)
library(cluster)
### Set working directory, load data, and define variables
# set working directory
setwd(getwd())
data<-read.csv("garymorphlm.csv",header = TRUE, as.is=TRUE)
# define variables
maxl<-data$maxl # maximum length
maxw<-data$maxw # maximum width
maxth<-data$maxth # maximum thickness
maxstl<-data$maxstl # maximum stem length
maxstw<-data$maxstw # maximum stem width
site<-data$Site # site name
### Principal Components Analysis for _site_
# assign varieties based upon reported metrics in Ford and Webb [1956]
lcheck1 <- data$maxl >= 80 & data$maxl <= 140
lcheck2 <- data$maxl >= 46 & data$maxl < 80
lcheck3 <- data$maxl >= 33 & data$maxl < 46
data$tv1 <- "UID" # = Gary points (no variety)
data$tv1 <- ifelse(lcheck1, "L", data$tv1)
data$tv1 <- ifelse(lcheck2, "M/T", data$tv1)
data$tv1 <- ifelse(lcheck3, "S", data$tv1)
tv1<-data$tv1
tv1
# subset poverty point data
pvptmx<-subset(data,Site=="Pov Pt",select=maxl:tv1)
pvptmx
#pca
df<-pvptmx[c(1:5)]
t1pca<-autoplot(prcomp(df),data = pvptmx, colour = 'tv1',
loadings = TRUE, loadings.colour = 'blue',
loadings.label = TRUE,loadings.label.size = 3,
frame = TRUE)
#render figure
t1pca
pp.maxl<-pvptmx$maxl
pp.tv1<-pvptmx$tv1
# anova = maximum length ~ tv1
t1ml<-lm.rrpp(pp.maxl ~ pp.tv1, SS.type = "I",data = pvptmx,iter = 9999,print.progress = FALSE)
anova(t1ml)
# visualise model predictions for maximum length ~ site
pp.tvDF<-data.frame(pp.tv1 = c("L","M/T","S"))
rownames(pp.tvDF)<-c("L","M/T","S")
ppPreds<-predict(t1ml,pp.tvDF)
ppPreds
# density plot by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_density(alpha=0.3)
# density plot by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_density(alpha=1)
# density plot by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_density(alpha=0.2)
# density plot by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_density(alpha=0.4)
# density plot by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_density()
# density plot by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_density()
# density plot by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = cond)) +
geom_density()
# density plot by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = cond)) +
geom_histogram(binwidth = .5, position = "dodge")
# density plot by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(binwidth = .5, position = "dodge")
# density plot by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(binwidth = .5, position = "identity")
# density plot by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(binwidth = .75, position = "identity")
# density plot by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(binwidth = .75, position = "identity")
# density plot by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(binwidth = .5, position = "identity")
# density plot by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(binwidth = .5, position = "identity") +
geom_density(alpha=.2)
# density plot by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(binwidth = .5, position = "identity") +
geom_density(alpha=.2, fill = pp.tv1)
# density plot by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(binwidth = .5, position = "identity") +
geom_density(alpha=.2, fill = pp.tv1)
# density plot by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(binwidth = .5, position = "identity") +
geom_density(alpha=.2, fill = "#FF6666")
# density plot by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(binwidth = .5, position = "identity") +
geom_density(alpha=.2)
cdat
# calculate the mean of each group
cdat<-ddply(pvptmx, "cond", summarise, rating.mean=mean(rating))
# calculate the mean of each group
cdat<-ddply(pvptmx, "pp.tv1", summarise, rating.mean=mean(rating))
cdat
# calculate the mean of each group
cdat<-ddply(pvptmx, "pp.tv1", summarise, type.mean=mean(pp.tv1))
cdat
# calculate the mean of each group
cdat<-ddply(pvptmx, "maxl", summarise, type.mean=mean(maxl))
cdat
# calculate the mean of each group
cdat<-ddply(pvptmx, "maxl", summarise, type.mean=mean(pp.tv1))
cdat
# density plot by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(binwidth = .5, alpha = .5, position = "identity") +
geom_vline(data = )
# density plot by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(binwidth = .5, alpha = .5, position = "identity")
# density plot by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(binwidth = .5, alpha = .35, position = "identity")
# density plot by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(binwidth = .5, alpha = .45, position = "identity")
# density plot by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(binwidth = .5, alpha = .45, position = "identity") +
geom_density(alpha = .2)
# density plot by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(binwidth = .75, alpha = .45, position = "identity") +
geom_density(alpha = .2)
# density plot by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(alpha = .45, position = "identity") +
geom_density(alpha = .2)
# density plot by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(alpha = .45, position = "identity") +
geom_density(alpha = .3)
# density plot by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(alpha = .45, position = "dodge") +
geom_density(alpha = .3)
# histogram and density plot by maxl by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(alpha = .45, position = "dodge") +
geom_density(alpha = .3) +
scale_color_brewer(palette = "Set1")
# histogram and density plot by maxl by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(alpha = .45, position = "dodge") +
geom_density(alpha = .4) +
scale_color_brewer(palette = "Set1")
# histogram and density plot by maxl by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(alpha = .45, position = "dodge") +
geom_density(alpha = .5) +
scale_color_brewer(palette = "Set1")
# histogram and density plot by maxl by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(binwidth = .5, alpha = .45, position = "dodge") +
geom_density(alpha = .5) +
scale_color_brewer(palette = "Set1")
# histogram and density plot by maxl by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(binwidth = .8, alpha = .45, position = "dodge") +
geom_density(alpha = .5) +
scale_color_brewer(palette = "Set1")
# histogram and density plot by maxl by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(binwidth = 2, alpha = .45, position = "dodge") +
geom_density(alpha = .5) +
scale_color_brewer(palette = "Set1")
# histogram and density plot by maxl by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(binwidth = 1, alpha = .45, position = "dodge") +
geom_density(alpha = .5) +
scale_color_brewer(palette = "Set1")
# histogram and density plot by maxl by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(binwidth = 1.5, alpha = .45, position = "dodge") +
geom_density(alpha = .5) +
scale_color_brewer(palette = "Set1")
# histogram and density plot by maxl by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(binwidth = 3, alpha = .45, position = "dodge") +
geom_density(alpha = .5) +
scale_color_brewer(palette = "Set1")
# histogram and density plot by maxl by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(binwidth = 1, alpha = .45, position = "dodge") +
geom_density(alpha = .5) +
scale_color_brewer(palette = "Set1")
# histogram and density plot by maxl by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(binwidth = 0.2, alpha = .45, position = "dodge") +
geom_density(alpha = .5) +
scale_color_brewer(palette = "Set1")
# histogram and density plot by maxl by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(binwidth = 0.3, alpha = .45, position = "dodge") +
geom_density(alpha = .5) +
scale_color_brewer(palette = "Set1")
# histogram and density plot by maxl by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(binwidth = .75, alpha = .45, position = "dodge") +
geom_density(alpha = .5) +
scale_color_brewer(palette = "Set1")
pp.maxl<-pvptmx$maxl
pp.tv1<-pvptmx$tv1
# anova = maximum length ~ tv1
t1ml<-lm.rrpp(pp.maxl ~ pp.tv1, SS.type = "I",data = pvptmx,iter = 9999,print.progress = FALSE)
anova(t1ml)
# visualise model predictions for maximum length ~ site
pp.tvDF<-data.frame(pp.tv1 = c("L","M/T","S"))
rownames(pp.tvDF)<-c("L","M/T","S")
ppPreds<-predict(t1ml,pp.tvDF)
plot(ppPreds, col = 1:NROW(pp.tvDF))
ppPreds
pp.tvDF
ggplot(pvptmx, aes(x=pp.tv1, y=ppPreds, colour = pp.tv1))
ggplot(ppPreds, aes(x=pp.tv1, y=ppPreds, colour = pp.tv1))
ggplot(pptvDF, aes(x=pp.tv1, y=ppPreds, colour = pp.tv1))
ggplot(pp.tvDF, aes(x=pp.tv1, y=ppPreds, colour = pp.tv1))
pp.tvDF
x<-plot(ppPreds, col = 1:NROW(pp.tvDF))
ggplot(x, aes(x=pp.tv1, y=ppPreds, colour = pp.tv1))
ggplot(ppPreds, aes(x=1:NROW(pp.tvDF), y=ppPreds, colour = pp.tv1))
ggplot(ppPreds, aes(x=1:NROW(pp.tvDF), y=pp.tv1, colour = pp.tv1))
ggplot(ppPreds, aes(x=1:NROW(pp.tvDF), y=pp.tv1, colour = pp.tv1))
# histogram and density plot by maxl by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(binwidth = .75, alpha = .45, position = "dodge") +
geom_density(alpha = .5) +
scale_color_brewer(palette = "Set1")
ggplot(ppPreds, aes(x=1:NROW(pp.tvDF), y=pp.tv1, colour = pp.tv1))
# visualise model predictions for maximum length ~ site
pp.tvDF<-data.frame(pp.tv1 = c("L","M/T","S"))
rownames(pp.tvDF)<-c("L","M/T","S")
ppPreds<-predict(t1ml,pp.tvDF)
plot(ppPreds, col = 1:NROW(pp.tvDF))
# pairwise comparison of LS means = which sites differ?
pp.ml<-pairwise(t1ml, groups = pvptmx$tv1)
summary(pp.ml, confidence = 0.95, test.type = "dist")
# correlation between mean vectors (angles in degrees)
summary(pp.ml, confidence = 0.95, test.type = "VC", angle.type = "deg")
# pairwise distances between variances = standardization?
summary(pp.ml, confidence = 0.95, test.type = "var")
# histogram and density plot by maxl by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(binwidth = .75, alpha = .45, position = "dodge") +
geom_density(alpha = .5) +
scale_color_brewer(palette = "Set1")
ggplot(ppPreds, aes(x=1:NROW(pp.tvDF), y=pp.tv1, colour = pp.tv1))
# histogram and density plot by maxl by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(binwidth = .75, alpha = .45, position = "dodge") +
geom_density(alpha = .5) +
scale_color_brewer(palette = "Set1") +
xlim(10,100)
# histogram and density plot by maxl by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(binwidth = .75, alpha = .45, position = "dodge") +
geom_density(alpha = .5) +
scale_color_brewer(palette = "Set1") +
xlim(20,100)
# histogram and density plot by maxl by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(binwidth = .75, alpha = .45, position = "dodge") +
geom_density(alpha = .5) +
scale_color_brewer(palette = "Set1") +
xlim(30,140)
unlink('linear-metrics_cache', recursive = TRUE)
# histogram and density plot by maxl by tv1
ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1)) +
geom_histogram(binwidth = 2, alpha = .45, position = "dodge") +
geom_density(alpha = .5) +
scale_color_brewer(palette = "Set1") +
xlim(30,140)
